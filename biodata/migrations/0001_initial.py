# Generated by Django 5.2.6 on 2025-09-19 06:32

import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('description', models.TextField(blank=True)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('is_public', models.BooleanField(default=True)),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='events/covers/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=120)),
                ('last_name', models.CharField(blank=True, max_length=120)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('occupation', models.CharField(blank=True, max_length=255)),
                ('phone', models.CharField(blank=True, max_length=50)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('ward', models.CharField(blank=True, max_length=120)),
                ('lga', models.CharField(blank=True, max_length=120)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='profiles/photos/')),
                ('bio', models.TextField(blank=True)),
                ('skills', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=80), blank=True, default=list, size=None)),
                ('education', models.JSONField(blank=True, default=list)),
                ('experience', models.JSONField(blank=True, default=list)),
                ('verified', models.BooleanField(default=False)),
                ('featured_until', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('resource_type', models.CharField(choices=[('doc', 'Document'), ('link', 'Link'), ('video', 'Video')], default='doc', max_length=20)),
                ('url', models.URLField(blank=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='resources/files/')),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=80), blank=True, default=list, size=None)),
                ('is_public', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('members', models.ManyToManyField(blank=True, related_name='teams', to='biodata.profile')),
            ],
        ),
    ]
